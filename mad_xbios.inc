xBIOS                      = $800;
xBIOS_VERSION              = xBIOS+$02;
xBIOS_RENAME_ENTRY         = xBIOS+$03;
xBIOS_LOAD_FILE            = xBIOS+$06;
xBIOS_OPEN_FILE            = xBIOS+$09;
xBIOS_LOAD_DATA            = xBIOS+$0c;
xBIOS_WRITE_DATA           = xBIOS+$0f;
xBIOS_OPEN_CURRENT_DIR     = xBIOS+$12;
xBIOS_GET_BYTE             = xBIOS+$15;
xBIOS_PUT_BYTE             = xBIOS+$18;
xBIOS_FLUSH_BUFFER         = xBIOS+$1b;
xBIOS_SET_LENGTH           = xBIOS+$1e;
xBIOS_SET_INIAD            = xBIOS+$21;
xBIOS_SET_FILE_OFFSET      = xBIOS+$24;
xBIOS_SET_RUNAD            = xBIOS+$27;
xBIOS_SET_DEFAULT_DEVICE   = xBIOS+$2a;
xBIOS_OPEN_DIR             = xBIOS+$2d;
xBIOS_LOAD_BINARY_FILE     = xBIOS+$30;
xBIOS_OPEN_DEFAULT_DIR     = xBIOS+$33;
xBIOS_SET_DEVICE           = xBIOS+$36;
xBIOS_RELOCATE_BUFFER      = xBIOS+$39;
xBIOS_GET_ENTRY            = xBIOS+$3c;
xBIOS_OPEN_DEFAULT_FILE    = xBIOS+$3f;
xBIOS_READ_SECTOR          = xBIOS+$42;
xBIOS_FIND_ENTRY           = xBIOS+$45;
xBIOS_SET_BUFFER_SIZE      = xBIOS+$48;

xDIRSIZE        = xBIOS+$3e5; // current directory size in sectors (1 byte)
xSPEED          = xBIOS+$3e6; // STANDARD SPEED (1 byte)
xHSPEED         = xBIOS+$3e7; // ULTRA SPEED (1 byte)
xIRQEN          = xBIOS+$3e8; // User IRQ (1 byte)
xAUDCTL         = xBIOS+$3e9; // AUDCTL
xFILE           = xBIOS+$3ea; // File handle (2 bytes)
xDIR            = xBIOS+$3ec; // Root directory handle (2 bytes)
xIOV            = xBIOS+$3ee; // I/O module entry (2 bytes)
xBUFFERH        = xBIOS+$3f0; // Buffer adr hi byte (1 byte)
xBUFSIZE        = xBIOS+$3f1; // Buffer size lo byte $100-SIZE (1 byte)
xDAUX3          = xBIOS+$3f2; // Buffer offset (1 byte)
xSEGMENT        = xBIOS+$3f3; // Bytes to go in binary file segment (2 bytes)
xNOTE           = xBIOS+$3f5; // File pointer (3 bytes)
xDEVICE         = xBIOS+$3fc; // Device ID
xDCMD           = xBIOS+$3fd; // CMD (1 byte)
xDAUX1          = xBIOS+$3fe; // Sector lo byte (1 byte)
xDAUX2          = xBIOS+$3ff; // Sector hi byte (1 byte)
